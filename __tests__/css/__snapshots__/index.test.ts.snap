// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`css > style-loader 1`] = `
"(() => {
  var __create = Object.create;
  var __defProp = Object.defineProperty;
  var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
  var __getOwnPropNames = Object.getOwnPropertyNames;
  var __getProtoOf = Object.getPrototypeOf;
  var __hasOwnProp = Object.prototype.hasOwnProperty;
  var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
    get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
  }) : x)(function(x) {
    if (typeof require !== "undefined") return require.apply(this, arguments);
    throw Error('Dynamic require of "' + x + '" is not supported');
  });
  var __commonJS = (cb, mod) => function __require2() {
    return mod || (0, cb[__getOwnPropNames(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
  };
  var __copyProps = (to, from, except, desc) => {
    if (from && typeof from === "object" || typeof from === "function") {
      for (let key of __getOwnPropNames(from))
        if (!__hasOwnProp.call(to, key) && key !== except)
          __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
    }
    return to;
  };
  var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
    // If the importer is in node compatibility mode or this is not an ESM
    // file that has been converted to a CommonJS file using a Babel-
    // compatible transform (i.e. "__esModule" has not been set), then set
    // "default" to the CommonJS "module.exports" for node compatibility.
    isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
    mod
  ));

  // css-loader:index.css
  var require_css = __commonJS({
    "css-loader:index.css"(exports, module) {
      module.exports = {};
    }
  });

  
  var require_css2 = __commonJS({
    "style-loader:index.css"(exports, module) {
      require_css();
      module.exports = {};
    }
  });

  // __tests__/css/index.jsx
  var import_index = __toESM(require_css2(), 1);
  var import_react = __toESM(__require("react"), 1);
  var import_client = __require("react-dom/client");
  var App = () => /* @__PURE__ */ import_react.default.createElement("div", { className: "app" }, /* @__PURE__ */ import_react.default.createElement("h1", { className: "title" }, "Hello World"));
  (0, import_client.createRoot)(document.getElementById("root")).render(/* @__PURE__ */ import_react.default.createElement(App, null));
})();
//# sourceMappingURL=index.js.map
"
`;

exports[`css > style-loader 2`] = `
"
.app {
  -webkit-user-select: none;
  user-select: none;
  padding: 20px;
}
.title {
  color: #000;
  background-image: url(/static/img/logo.png);
  font-size: 20px;
}
@font-face {
  font-family: iconfont;
  src: url("./iconfont-SRJ4WUKK.ttf?t=1659513983328") format("truetype");
}
.bg {
  background: url(/public/image/icon/fire\\ 2@2x.png) 100% / cover no-repeat;
}
/*# sourceMappingURL=index.css.map */
"
`;
